# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.firefox.options import Options

class TestSmokeTest():
    def setup_method(self, method):
        options = Options()
        options.add_argument("--headless")  # Run in headless mode
        self.driver = webdriver.Firefox(options=options)
        self.vars = {}
        self.driver.set_window_size(1513, 965)  # Set window size once for all tests
    
    def teardown_method(self, method):
        self.driver.quit()
    
    def test_test1LogoHeaderandTitle(self):
        self.driver.get("http://127.0.0.1:5500/teton/1.6/index.html")
        # Verify logo exists
        assert len(self.driver.find_elements(By.CSS_SELECTOR, ".header-logo img")) > 0
        # Verify header titles
        assert self.driver.find_element(By.CSS_SELECTOR, ".header-title > h1").text == "Teton Idaho"
        assert self.driver.find_element(By.CSS_SELECTOR, ".header-title > h2").text == "Chamber of Commerce"
        # Verify page title
        assert self.driver.title == "Teton Idaho CoC"
    
    def test_test2HomePageSpotlightsandJoinFeature(self):
        self.driver.get("http://127.0.0.1:5500/teton/1.6/index.html")
        # Verify spotlights
        assert len(self.driver.find_elements(By.CSS_SELECTOR, ".spotlight1 img")) > 0
        assert len(self.driver.find_elements(By.CSS_SELECTOR, ".spotlight2 img")) > 0
        # Verify Join link and functionality
        join_link = self.driver.find_element(By.LINK_TEXT, "Join")
        assert join_link.is_displayed()
        join_link.click()
        assert "join.html" in self.driver.current_url
    
    def test_test3DirectoryGridandListfeature(self):
        self.driver.get("http://127.0.0.1:5500/teton/1.6/directory.html")  # Direct navigation
        # Test grid view
        self.driver.find_element(By.ID, "directory-grid").click()
        assert "Teton Turf and Tree" in self.driver.find_element(
            By.XPATH, "//p[contains(text(),'Teton Turf and Tree')]").text
        # Test list view
        self.driver.find_element(By.ID, "directory-list").click()
        assert "Teton Turf and Tree" in self.driver.find_element(
            By.XPATH, "//p[contains(text(),'Teton Turf and Tree')]").text
    
    def test_test4JoinPageDataEntry(self):
        self.driver.get("http://127.0.0.1:5500/teton/1.6/join.html")
        # Verify First Name field
        assert self.driver.find_element(By.NAME, "fname").is_displayed()
        # Fill form
        self.driver.find_element(By.NAME, "fname").send_keys("Erjok")
        self.driver.find_element(By.NAME, "lname").send_keys("Agot")
        self.driver.find_element(By.NAME, "bizname").send_keys("Fiba")
        self.driver.find_element(By.NAME, "biztitle").send_keys("Boss")
        self.driver.find_element(By.NAME, "submit").click()
        # Verify next step
        assert self.driver.find_element(By.NAME, "email").is_displayed()
    
    def test_test5AdminPageUsernameandPassword(self):
        self.driver.get("http://127.0.0.1:5500/teton/1.6/admin.html")
        # Verify username field
        assert self.driver.find_element(By.ID, "username").is_displayed()
        # Attempt login
        self.driver.find_element(By.ID, "username").send_keys("ERJOK")
        self.driver.find_element(By.ID, "password").send_keys("SGOT!&#$")
        self.driver.find_element(By.CSS_SELECTOR, ".mysubmit").click()
        # Verify error
        assert "Invalid username and password" in self.driver.find_element(
            By.CSS_SELECTOR, ".errorMessage").text